"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable @typescript-eslint/adjacent-overload-signatures */
/* eslint-disable require-jsdoc */
var enums_1 = require("../domain/enums");
/*
{
                    "deviceGuid": "xxx",
                    "deviceType": "1",
                    "deviceName": "yyy",
                    "permission": 3,
                    "summerHouse": 0,
                    "iAutoX": false,
                    "nanoe": false,
                    "autoMode": true,
                    "heatMode": true,
                    "fanMode": false,
                    "dryMode": true,
                    "coolMode": true,
                    "ecoNavi": true,
                    "powerfulMode": true,
                    "quietMode": true,
                    "airSwingLR": true,
                    "ecoFunction": 0,
                    "temperatureUnit": 0,
                    "modeAvlList": {
                        "autoMode": 1,
                        "fanMode": 1
                    },
                    "parameters": {
                        "operate": 1,
                        "operationMode": 3,
                        "temperatureSet": 19.0,
                        "fanSpeed": 0,
                        "fanAutoMode": 1,
                        "airSwingLR": 0,
                        "airSwingUD": 0,
                        "ecoMode": 0,
                        "ecoNavi": 1,
                        "nanoe": 0,
                        "iAuto": 0,
                        "actualNanoe": 0,
                        "airDirection": 0,
                        "ecoFunctionData": 0
                    }
                }
*/
var Device = /** @class */ (function () {
    function Device(guid, name) {
        this._operate = enums_1.Power.Off;
        this._operationMode = enums_1.OperationMode.Auto;
        this._temperatureSet = 0;
        this._fanSpeed = enums_1.FanSpeed.Auto;
        this._fanAutoMode = enums_1.FanAutoMode.AirSwingAuto;
        this._airSwingLR = enums_1.AirSwingLR.Mid;
        this._airSwingUD = enums_1.AirSwingUD.Mid;
        this._ecoMode = enums_1.EcoMode.Auto;
        this._ecoNavi = 0;
        this._nanoe = 0;
        this._iAuto = 0;
        this._actualNanoe = 0;
        this._airDirection = 0;
        this._ecoFunctionData = 0;
        this._guid = guid;
        this._name = name;
    }
    Object.defineProperty(Device.prototype, "parameters", {
        get: function () {
            return {
                operate: this._operate,
                operationMode: this._operationMode,
                ecoMode: this._ecoMode,
                temperatureSet: this._temperatureSet,
                airSwingUD: this._airSwingUD,
                airSwingLR: this._airSwingLR,
                fanAutoMode: this._fanAutoMode,
                fanSpeed: this._fanSpeed
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "operate", {
        /**
         * Getter operate
         * @return {Power}
         */
        get: function () {
            return this._operate;
        },
        /**
         * Setter operate
         * @param {Power} value
         */
        set: function (value) {
            this._operate = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "operationMode", {
        /**
         * Getter operationMode
         * @return {OperationMode}
         */
        get: function () {
            // eslint-disable-next-line semi
            return this._operationMode;
        },
        /**
         * Setter operationMode
         * @param {OperationMode} value
         */
        set: function (value) {
            this._operationMode = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "temperatureSet", {
        /**
         * Getter temperatureSet
         * @return {number}
         */
        get: function () {
            return this._temperatureSet;
        },
        /**
         * Setter temperatureSet
         * @param {number} value
         */
        set: function (value) {
            this._temperatureSet = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "fanSpeed", {
        /**
         * Getter fanSpeed
         * @return {FanSpeed}
         */
        get: function () {
            return this._fanSpeed;
        },
        /**
         * Setter fanSpeed
         * @param {FanSpeed} value
         */
        set: function (value) {
            this._fanSpeed = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "fanAutoMode", {
        /**
         * Getter fanAutoMode
         * @return {FanAutoMode}
         */
        get: function () {
            return this._fanAutoMode;
        },
        /**
         * Setter fanAutoMode
         * @param {FanAutoMode} value
         */
        set: function (value) {
            this._fanAutoMode = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "airSwingLR", {
        /**
         * Getter airSwingLR
         * @return {AirSwingLR}
         */
        get: function () {
            return this._airSwingLR;
        },
        /**
         * Setter airSwingLR
         * @param {AirSwingLR} value
         */
        set: function (value) {
            this._airSwingLR = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "airSwingUD", {
        /**
         * Getter airSwingUD
         * @return {AirSwingUD}
         */
        get: function () {
            return this._airSwingUD;
        },
        /**
         * Setter airSwingUD
         * @param {AirSwingUD} value
         */
        set: function (value) {
            this._airSwingUD = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "ecoMode", {
        /**
         * Getter ecoMode
         * @return {EcoMode}
         */
        get: function () {
            return this._ecoMode;
        },
        /**
         * Setter ecoMode
         * @param {EcoMode} value
         */
        set: function (value) {
            this._ecoMode = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "ecoNavi", {
        /**
         * Getter ecoNavi
         * @return {number}
         */
        get: function () {
            return this._ecoNavi;
        },
        /**
         * Setter ecoNavi
         * @param {number} value
         */
        set: function (value) {
            this._ecoNavi = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "nanoe", {
        /**
         * Getter nanoe
         * @return {number}
         */
        get: function () {
            return this._nanoe;
        },
        /**
         * Setter nanoe
         * @param {number} value
         */
        set: function (value) {
            this._nanoe = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "iAuto", {
        /**
         * Getter iAuto
         * @return {number}
         */
        get: function () {
            return this._iAuto;
        },
        /**
         * Setter iAuto
         * @param {number} value
         */
        set: function (value) {
            this._iAuto = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "actualNanoe", {
        /**
         * Getter actualNanoe
         * @return {number}
         */
        get: function () {
            return this._actualNanoe;
        },
        /**
         * Setter actualNanoe
         * @param {number} value
         */
        set: function (value) {
            this._actualNanoe = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "airDirection", {
        /**
         * Getter airDirection
         * @return {number}
         */
        get: function () {
            return this._airDirection;
        },
        /**
         * Setter airDirection
         * @param {number} value
         */
        set: function (value) {
            this._airDirection = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "ecoFunctionData", {
        /**
         * Getter ecoFunctionData
         * @return {number}
         */
        get: function () {
            return this._ecoFunctionData;
        },
        /**
         * Setter ecoFunctionData
         * @param {number} value
         */
        set: function (value) {
            this._ecoFunctionData = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "name", {
        /**
         * Getter name
         * @return {string}
         */
        get: function () {
            return this._name;
        },
        /**
         * setter name
         * @param {string} value
         */
        set: function (value) {
            this._name = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "guid", {
        /**
         * Getter guid
         * @return {string}
         */
        get: function () {
            return this._guid;
        },
        /**
         * Setter guid
         * @param {string} value
         */
        set: function (value) {
            this._guid = value;
        },
        enumerable: true,
        configurable: true
    });
    return Device;
}());
exports.Device = Device;
